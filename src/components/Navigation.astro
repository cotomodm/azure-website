---
// Navigation component - used on all pages
export interface Props {
  transparent?: boolean; // For pages with hero images
}

const { transparent = false } = Astro.props;
const currentPath = Astro.url.pathname;

// Normalize path by removing trailing slash (except for root)
const normalizedPath = currentPath === '/' ? '/' : currentPath.replace(/\/$/, '');

const navItems = [
  { href: '/', label: 'VENTURES' },
  { href: '/what-we-do', label: 'WHAT WE DO' },
  { href: '/about', label: 'ABOUT US' },
  { href: '/contact', label: 'CONTACT US' },
];

// Helper function to check if a nav item is active
const isActive = (href: string) => {
  if (href === '/') {
    return normalizedPath === '/';
  }
  return normalizedPath === href || normalizedPath === href + '/';
};
---

<nav class={`navigation ${transparent ? 'navigation--transparent' : ''}`}>
  <div class="nav-container">
    <a href="/" class="logo">
      <img 
        src="/images/logos/azure_logo_white.svg" 
        alt="Azure Ventures logo"
        class="logo-white"
      >
      <img 
        src="/images/logos/azure_logo_blue.svg" 
        alt="Azure Ventures logo"
        class="logo-blue"
      >
    </a>
    <div class="nav-links">
      {navItems.map(item => (
        <a 
          href={item.href}
          class={isActive(item.href) ? 'active' : ''}
        >
          {item.label}
        </a>
      ))}
    </div>
    
    <!-- Mobile menu dropdown -->
    <div class="mobile-nav-links">
      {navItems.map(item => (
        <a 
          href={item.href}
          class={isActive(item.href) ? 'active' : ''}
        >
          {item.label}
        </a>
      ))}
    </div>
    
    <button class="mobile-menu" aria-label="Menu" aria-expanded="false">
      <span></span>
      <span></span>
      <span></span>
    </button>
  </div>
</nav>

<style>
  .navigation {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    padding: 1.5rem 0;
    z-index: 1000;
    transition: background-color 0.3s ease, box-shadow 0.3s ease, padding 0.3s ease;
    background: white;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  /* Transparent variant for hero pages */
  .navigation--transparent {
    background: rgba(0, 0, 0, 0.5);
    box-shadow: none;
  }

  .navigation--transparent .logo,
  .navigation--transparent .nav-links a {
    color: white;
  }

  /* When scrolled */
  .navigation.scrolled {
    background: white;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .navigation.scrolled .logo,
  .navigation.scrolled .nav-links a {
    color: #0B0D10;
  }



  .nav-container {
    max-width: 100%;
    margin: 0 auto;
    padding: 0 3rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .logo {
    display: flex;
    align-items: center;
    text-decoration: none;
    color: #0B0D10;
    position: relative;
    min-width: 178px;
    min-height: 40px;
    margin-top: -3px;
  }

  .logo img {
    max-width: 178px;
    height: auto;
    position: absolute;
    top: 0;
    left: 0;
    transition: transform 0.3s ease;
  }


  }

  /* Show blue logo by default (non-transparent nav) */
  .logo-white {
    display: none;
  }

  .logo-blue {
    display: block;
  }

  /* Transparent nav: show white logo, hide blue */
  .navigation--transparent .logo-white {
    display: block;
  }

  .navigation--transparent .logo-blue {
    display: none;
  }

  /* When scrolled: show blue logo, hide white */
  .navigation.scrolled .logo-white {
    display: none;
  }

  .navigation.scrolled .logo-blue {
    display: block;
  }

  .nav-links {
    display: flex;
    gap: 2.5rem;
  }

  .nav-links a {
    color: #0B0D10;
    text-decoration: none;
    font-size: 0.9375rem; /* 15px */
    letter-spacing: 0.05em;
    font-weight: 500;
    transition: opacity 0.3s ease;
    position: relative;
  }

  .nav-links a:hover {
    opacity: 0.7;
  }

  .nav-links a.active::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 100%;
    height: 2px;
    background: #4fc3f7;
  }

  .mobile-menu {
    display: none;
    flex-direction: column;
    gap: 4px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
  }

  .mobile-menu span {
    display: block;
    width: 24px;
    height: 4px;
    background: currentColor;
    transition: all 0.3s ease;
  }

  /* Hamburger animation when open */
  .mobile-menu.active span:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
  }

  .mobile-menu.active span:nth-child(2) {
    opacity: 0;
  }

  .mobile-menu.active span:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -6px);
  }

  /* Mobile navigation dropdown */
  .mobile-nav-links {
    display: none;
    position: fixed;
    top: 80px; /* Below nav bar */
    left: 0;
    right: 0;
    background: var(--color-brown);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    flex-direction: column;
    padding: 1rem 0;
    z-index: 999;
  }

  .mobile-nav-links.active {
    display: flex;
  }

  .mobile-nav-links a {
    color: var(--color-azure-light);
    text-decoration: none;
    font-size: 1rem;
    letter-spacing: 0.05em;
    font-weight: 500;
    padding: 1rem 1.5rem;
    text-align: right;
    transition: background-color 0.3s ease;
  }

  .mobile-nav-links a:hover,
  .mobile-nav-links a.active {
    background-color: rgba(255, 255, 255, 0.1);
  }

  @media (max-width: 768px) {
    /* Mobile nav is always white and at reduced size */
    .navigation {
      background: white !important;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1) !important;
      padding: 1rem 0 !important; /* Always at shrunk size */
    }

    /* Mobile always shows blue logo */
    .navigation .logo-white {
      display: none !important;
    }

    .navigation .logo-blue {
      display: block !important;
      transform: scale(0.7) !important; /* Always at 70% size */
      transform-origin: left center;
      margin-top: -6px!important;
    }

    /* Mobile text links always dark */
    .navigation .nav-links a,
    .navigation .mobile-menu {
      color: var(--color-azure) !important;
    }

    .nav-links {
      display: none;
    }

    .mobile-menu {
      display: flex;
    }

    .nav-container {
      padding: 0 1.5rem;
    }

    /* Adjust mobile dropdown position for smaller nav */
    .mobile-nav-links {
      top: 72px; /* Adjusted for reduced nav height */
    }
  }
</style>

<script>
  // Make the transparent nav go solid + shrink on scroll
  const nav = document.querySelector('.navigation--transparent');
  if (!nav) { /* non-hero pages already solid */ } else {
    const onScroll = () => {
      const y = window.scrollY || document.documentElement.scrollTop;
      nav.classList.toggle('scrolled', y > 80);  // go white
      nav.classList.toggle('shrink',  y > 120);  // reduce height ~30%
    };

    window.addEventListener('scroll', onScroll, { passive: true });
    onScroll(); // run once in case user lands mid-page
  }

  // Mobile menu toggle
  const mobileMenuBtn = document.querySelector('.mobile-menu');
  const mobileNavLinks = document.querySelector('.mobile-nav-links');
  
  if (mobileMenuBtn && mobileNavLinks) {
    mobileMenuBtn.addEventListener('click', () => {
      const isOpen = mobileNavLinks.classList.toggle('active');
      mobileMenuBtn.classList.toggle('active');
      mobileMenuBtn.setAttribute('aria-expanded', isOpen.toString());
    });

    // Close menu when clicking a link
    const mobileLinks = mobileNavLinks.querySelectorAll('a');
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileNavLinks.classList.remove('active');
        mobileMenuBtn.classList.remove('active');
        mobileMenuBtn.setAttribute('aria-expanded', 'false');
      });
    });

    // Close menu when clicking outside
    document.addEventListener('click', (e) => {
      if (!mobileMenuBtn.contains(e.target) && !mobileNavLinks.contains(e.target)) {
        mobileNavLinks.classList.remove('active');
        mobileMenuBtn.classList.remove('active');
        mobileMenuBtn.setAttribute('aria-expanded', 'false');
      }
    });
  }
</script>