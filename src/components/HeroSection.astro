---
// Consolidated Hero Component with all variations
export interface Props {
  text: string;
  backgroundImage?: string;
  alignment?: 'left' | 'center';
  maxWidth?: string;
  overlayOpacity?: number;
}

const { 
  text, 
  backgroundImage = '/images/ocean-hero.jpg',
  alignment = 'left',
  maxWidth = '70%',
  overlayOpacity = 0.3
} = Astro.props;

// Generate unique ID for this instance
const heroId = `hero-${Math.random().toString(36).substr(2, 9)}`;
---

<div class="hero-background" 
     style={`background-image: url('${backgroundImage}')`}
     data-overlay={overlayOpacity}>
</div>

<section class="hero-section" data-align={alignment}>
  <div class="hero-content">
    <h1 id={heroId} 
        data-text={text} 
        style={`max-width: ${maxWidth}`}>
      {text}
    </h1>
  </div>
</section>

<style>
  .hero-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
    z-index: -1;
  }

  .hero-background::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(
      to bottom,
      rgba(11, 13, 16, var(--overlay, 0.2)) 0%,
      rgba(11, 13, 16, calc(var(--overlay, 0.3) * 1.2)) 100%
    );
  }

  .hero-section {
    min-height: 100vh;
    display: flex;
    align-items: center;
    padding: clamp(4rem, 8vw, 6rem) clamp(1rem, 7.3vw, 140px) clamp(2rem, 4vw, 3rem);
    position: relative;
    z-index: 1;
  }

  .hero-section[data-align="left"] {
    justify-content: flex-start;
  }

  .hero-section[data-align="center"] {
    justify-content: center;
    text-align: center;
  }

  .hero-content {
    width: 100%;
    max-width: var(--container-max, 1400px);
    margin: 0 auto;
  }

  .hero-content h1 {
    font-size: clamp(1.25rem, 4vw, 3rem);
    font-weight: 300;
    line-height: 1.3;
    color: white;
  }
</style>