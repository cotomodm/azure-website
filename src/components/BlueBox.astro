---
// Reusable Blue Box Component
export interface Props {
  heading: string;
  maxWidth?: string;
}

const { heading, maxWidth = '600px' } = Astro.props;
---

<section class="intro-section">
  <div class="blue-box" style={`max-width: ${maxWidth}`}>
    <h2>{heading}</h2>
    <div class="box-content">
      <slot /> <!-- Content passed from parent -->
    </div>
  </div>
</section>

<style>
  .intro-section {
    position: relative;
    padding: clamp(3rem, 6vw, 6rem) 100px;
    margin-top: -150px; /* Pulls box 50px up into hero section */
    z-index: 2; /* Ensures it appears above hero background */
    max-width: var(--container-max, 1400px);
    margin-left: auto;
    margin-right: auto;
  }

  .blue-box {
    background: linear-gradient(
      to bottom,
      var(--color-azure-light) 0%,
      var(--color-yellow) 100%
    );
    backdrop-filter: blur(10px);
    padding: clamp(1.5rem, 4vw, 3rem);
    border-radius: 15px;
  }

  .blue-box h2 {
    font-size: var(--font-size-2xl); /* Uses fluid scale from global.css */
    font-weight: 400;
    line-height: 1.4;
    margin-bottom: clamp(1rem, 3vw, 2rem);
    color: var(--color-ocean);
  }

  /* Updated to match fluid body copy specs */
  .box-content :global(p) {
    font-size: var(--font-size-base); /* Uses fluid scale from global.css */
    line-height: 1.5;
    font-weight: 400;
    margin-bottom: clamp(0.75rem, 2vw, 1rem);
    color: var(--color-ocean);
  }

  .box-content :global(p:last-child) {
    margin-bottom: 0;
  }

  @media (max-width: 768px) {
    .intro-section {
      padding-left: 1rem;
      padding-right: 1rem;
    }

    /* Full width on mobile */
    .blue-box {
      max-width: 100% !important;
    }
  }
</style>
